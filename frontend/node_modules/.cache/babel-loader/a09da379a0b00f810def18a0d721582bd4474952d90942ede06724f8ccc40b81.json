{"ast":null,"code":"import { createContext } from \"react\";\nexport const InfoContext = /*#__PURE__*/createContext({\n  timeNow: \"\",\n  setTimeNow: () => {},\n  allEvents: [],\n  setAllEvents: () => {},\n  search: \"\",\n  setSearch: () => {},\n  totalGuests: 0,\n  guests: [],\n  setGuests: () => {},\n  perPage: 5,\n  setPerPage: () => {},\n  skip: 0,\n  setSkip: () => {},\n  searchByEvent: \"\",\n  setSearchByEvent: () => {},\n  guestChecked: () => {}\n});","map":{"version":3,"names":["createContext","InfoContext","timeNow","setTimeNow","allEvents","setAllEvents","search","setSearch","totalGuests","guests","setGuests","perPage","setPerPage","skip","setSkip","searchByEvent","setSearchByEvent","guestChecked"],"sources":["/home/bruno/Desktop/trabalho/checklist/frontend/src/Contexts/infoContext.tsx"],"sourcesContent":["import { createContext } from \"react\";\n\nimport {\n  ItemCompanyProps,\n  ListGuestProps,\n  ListEventsProps,\n} from \"../../@types\";\n\ninterface InfoProps {\n  timeNow: string;\n  setTimeNow: (c: string) => void;\n  allEvents: ListEventsProps[];\n  setAllEvents: (c: ListEventsProps[]) => void;\n  search: string;\n  setSearch: (c: string) => void;\n  totalGuests: number;\n  guests: ListGuestProps[];\n  setGuests: (c: ListGuestProps[]) => void;\n  perPage: number;\n  setPerPage: (c: number) => void;\n  skip: number;\n  setSkip: (c: number) => void;\n  searchByEvent: string;\n  setSearchByEvent: (c: string) => void;\n  guestChecked: (id: number) => void;\n  hasAbsentGuestNumber: 0;\n  setHasAbsentGuestNumber: (id: number) => void;\n  hasArrivedGuestNumber: 0;\n  setHasArrivedGuestNumber: (id: number) => void;\n}\n\nexport const InfoContext = createContext<InfoProps>({\n  timeNow: \"\",\n  setTimeNow: () => {},\n  allEvents: [],\n  setAllEvents: () => {},\n  search: \"\",\n  setSearch: () => {},\n  totalGuests: 0,\n\n  guests: [],\n  setGuests: () => {},\n  perPage: 5,\n  setPerPage: () => {},\n  skip: 0,\n  setSkip: () => {},\n  searchByEvent: \"\",\n  setSearchByEvent: () => {},\n  guestChecked: () => {},\n});\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AA+BrC,OAAO,MAAMC,WAAW,gBAAGD,aAAa,CAAY;EAClDE,OAAO,EAAE,EAAE;EACXC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAC;EACpBC,SAAS,EAAE,EAAE;EACbC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAC;EACtBC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,WAAW,EAAE,CAAC;EAEdC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,OAAO,EAAE,CAAC;EACVC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAC;EACpBC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBC,aAAa,EAAE,EAAE;EACjBC,gBAAgB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAC1BC,YAAY,EAAEA,CAAA,KAAM,CAAC;AACvB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}